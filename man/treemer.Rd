% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/treemer.R
\name{treemer}
\alias{treemer}
\alias{similarityMatrix}
\alias{groupTips}
\title{Topology-dependent tree trimming}
\usage{
similarityMatrix(tree)

groupTips(
  tree,
  similarity = NULL,
  simMatrix = NULL,
  forbidTrivial = TRUE,
  tipnames = TRUE
)
}
\arguments{
\item{tree}{The return from \code{\link{addMSA}} function}

\item{similarity}{Similarity threshold for tree trimming in \code{groupTips}.
If not provided, the mean similarity substract standard deviation of all
sequences will be used.}

\item{simMatrix}{A diagonal matrix of similarities for each pair of
sequences.}

\item{forbidTrivial}{Does not allow trivial trimming}

\item{tipnames}{If return as tipnames}
}
\value{
\code{similarityMatrix} returns a diagonal matrix of similarity
  between sequences

\code{groupTips} returns grouping of tips
}
\description{
\code{similarityMatrix} calculates similarity between aligned
  sequences The similarity matrix can be used in \code{\link{groupTips}} or
  \code{\link{lineagePath}}

\code{groupTips} uses sequence similarity to group tree tips.
  Members in a group are always constrained to share the same ancestral node.
  Similarity between two tips is derived from their multiple sequence
  alignment. The site will not be counted into total length if both are gap.
  Similarity is calculated as number of matched divided by the corrected
  total length. So far the detection of divergence is based on one simple
  rule: the miminal pairwise similarity. The two branches are decided to be
  divergent if the similarity is lower than the threshold.
}
\examples{
data('zikv_tree')
data('zikv_align')
tree <- addMSA(zikv_tree, alignment = zikv_align)
simMatrix <- similarityMatrix(tree)
groupTips(tree, 0.996, simMatrix)
}
